swagger: '2.0'
info:
  title: Ed-Fi OneRoster API
  version: v1p2
tags:
  - name: Demographics
    x-tag-meaning: set
    description: Endpoints that comprise the Demographics functionality
securityDefinitions:
  oauth2_auth:
    type: oauth2
    flow: application
    tokenUrl: "{OAUTH2_ISSUERBASEURL}oauth/token"
    scopes:
      'https://purl.imsglobal.org/spec/or/v1p2/scope/roster-demographics.readonly': read demographics data only
      'https://purl.imsglobal.org/spec/or/v1p2/scope/roster-core.readonly': read rostering data except demographics
      'https://purl.imsglobal.org/spec/or/v1p2/scope/roster.readonly': read all rostering data including demographics
security:
  - oauth2_auth: []
paths:
  /ims/oneroster/rostering/v1p2/academicSessions:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getAcademicSessions
      description: Return collection of all academic sessions.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: Return collection of all academic sessions.
          schema:
            properties:
              academicSessions:
                type: array
                items:
                  $ref: '#/definitions/academicSession'
  '/ims/oneroster/rostering/v1p2/academicSessions/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getAcademicSession
      description: Return specific Academic Session.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/academicSessions]'
          x-source: getAcademicSessions
      responses:
        '200':
          description: Return specific Academic Session.
          schema:
            properties:
              academicSession:
                type: object
                $ref: '#/definitions/academicSession'
  /ims/oneroster/rostering/v1p2/classes:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getClasses
      description: Return collection of classes.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: Return collection of classes.
          schema:
            properties:
              classes:
                type: array
                items:
                  $ref: '#/definitions/class'
  # '/ims/oneroster/resources/v1p2/classes/{id}/resources':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Resources
  #       - Resources
  #     summary: getResourcesForClass
  #     description: Return the collection of resources associated to this class.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/classes]'
  #         x-source: getClasses
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of resources associated to this class.
  #         schema:
  #           properties:
  #             resources:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/resource'
  '/ims/oneroster/rostering/v1p2/classes/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getClass
      description: Return specific class.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/classes]'
          x-source: getClasses
      responses:
        '200':
          description: Return specific class.
          schema:
            properties:
              class:
                type: object
                $ref: '#/definitions/class'
  # '/ims/oneroster/rostering/v1p2/classes/{id}/students':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getStudentsForClass
  #     description: Return the collection of students that are taking this class.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/classes]'
  #         x-source: getClasses
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of students that are taking this class.
  #         schema:
  #           properties:
  #             users:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/user'
  # '/ims/oneroster/rostering/v1p2/classes/{id}/teachers':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getTeachersForClass
  #     description: Return the collection of teachers that are teaching this class.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/classes]'
  #         x-source: getClasses
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of teachers that are teaching this class.
  #         schema:
  #           properties:
  #             users:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/user'
  /ims/oneroster/rostering/v1p2/courses:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getCourses
      description: Return collection of courses.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: Return collection of courses.
          schema:
            properties:
              courses:
                type: array
                items:
                  $ref: '#/definitions/course'
  # '/ims/oneroster/resources/v1p2/courses/{id}/resources':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Resources
  #       - Resources
  #     summary: getResourcesForCourse
  #     description: Return the collection of resources associated to this course.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/courses]'
  #         x-source: getCourses
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of resources associated to this course.
  #         schema:
  #           properties:
  #             resources:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/resource'
  '/ims/oneroster/rostering/v1p2/courses/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getCourse
      description: Return specific course.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/courses]'
          x-source: getCourses
      responses:
        '200':
          description: Return specific course.
          schema:
            properties:
              course:
                type: object
                $ref: '#/definitions/course'
  # '/ims/oneroster/rostering/v1p2/courses/{id}/classes':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getClassesForCourse
  #     description: Return the collection of classes that are teaching this course.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/courses]'
  #         x-source: getCourses
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of classes that are teaching this course.
  #         schema:
  #           properties:
  #             classes:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/class'
  /ims/oneroster/rostering/v1p2/demographics:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Demographics
        - Demographics
      summary: getDemographics
      description: Return collection of demographics.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: Return collection of demographics.
          schema:
            properties:
              demographics:
                type: array
                items:
                  $ref: '#/definitions/demographic'
  '/ims/oneroster/rostering/v1p2/demographics/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Demographics
        - Demographics
      summary: getDemographic
      description: Return specific demographics.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/demographics]'
          x-source: getDemographics
      responses:
        '200':
          description: Return specific demographics.
          schema:
            properties:
              demographic:
                type: object
                $ref: '#/definitions/demographic'
  /ims/oneroster/rostering/v1p2/enrollments:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getEnrollments
      description: Return collection of all enrollments.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: Return collection of all enrollments.
          schema:
            properties:
              enrollments:
                type: array
                items:
                  $ref: '#/definitions/enrollment'
  '/ims/oneroster/rostering/v1p2/enrollments/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getEnrollment
      description: Return specific enrollment.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/enrollments]'
          x-source: getEnrollments
      responses:
        '200':
          description: Return specific enrollment.
          schema:
            properties:
              enrollment:
                type: object
                $ref: '#/definitions/enrollment'
  /ims/oneroster/rostering/v1p2/gradingPeriods:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Convenience Rostering
        - Rostering
      summary: getGradingPeriods
      description: Return collection of grading periods.  A Term is an instance of an AcademicSession.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: Return collection of grading periods.  A Term is an instance of an AcademicSession.
          schema:
            properties:
              academicSessions:
                type: array
                items:
                  $ref: '#/definitions/academicSession'
  '/ims/oneroster/rostering/v1p2/gradingPeriods/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Convenience Rostering
        - Rostering
      summary: getGradingPeriod
      description: Return specific Grading Period.  A Grading Period is an instance of an AcademicSession.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/gradingPeriods]'
          x-source: getGradingPeriods
      responses:
        '200':
          description: Return specific Grading Period.  A Grading Period is an instance of an AcademicSession.
          schema:
            properties:
              academicSession:
                type: object
                $ref: '#/definitions/academicSession'
  /ims/oneroster/rostering/v1p2/orgs:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getOrgs
      description: Return collection of Orgs.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: Return collection of Orgs.
          schema:
            properties:
              orgs:
                type: array
                items:
                  $ref: '#/definitions/org'
  '/ims/oneroster/rostering/v1p2/orgs/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getOrg
      description: Return Specific Org.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/orgs]'
          x-source: getOrgs
      responses:
        '200':
          description: Return Specific Org.
          schema:
            properties:
              org:
                type: object
                $ref: '#/definitions/org'
  # /ims/oneroster/resources/v1p2/resources:
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Basic Resources
  #       - Resources
  #     summary: getResources
  #     description: Return collection of resources.
  #     parameters:
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return collection of resources.
  #         schema:
  #           properties:
  #             resources:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/resource'
  # '/ims/oneroster/resources/v1p2/resources/{id}':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Basic Resources
  #       - Resources
  #     summary: getResource
  #     description: Return specific resource.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/resources/v1p2/resources]'
  #         x-source: getResources
  #     responses:
  #       '200':
  #         description: Return specific resource.
  #         schema:
  #           properties:
  #             resource:
  #               type: object
  #               $ref: '#/definitions/resource'
  # /ims/oneroster/rostering/v1p2/roles:
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Basic Rostering
  #       - Rostering
  #     summary: getRoles
  #     description: 'Return collection of roles '
  #     parameters:
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: 'Return collection of roles '
  #         schema:
  #           properties:
  #             roles:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/role'
  # '/ims/oneroster/rostering/v1p2/roles/{id}':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Basic Rostering
  #       - Rostering
  #     summary: getUser
  #     description: Return specific role
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/roles]'
  #         x-source: getRoles
  #     responses:
  #       '200':
  #         description: Return specific role
  #         schema:
  #           properties:
  #             user:
  #               type: object
  #               $ref: '#/definitions/role'
  /ims/oneroster/rostering/v1p2/schools:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Convenience Rostering
        - Rostering
      summary: getSchools
      description: Return collection of schools. A School is an instance of an Org.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: Return collection of schools. A School is an instance of an Org.
          schema:
            properties:
              orgs:
                type: array
                items:
                  $ref: '#/definitions/org'
  '/ims/oneroster/rostering/v1p2/schools/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Convenience Rostering
        - Rostering
      summary: getSchool
      description: 'Return specific school.  A School is an instance of an Org.'
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/schools]'
          x-source: getSchools
      responses:
        '200':
          description: 'Return specific school.  A School is an instance of an Org. '
          schema:
            properties:
              org:
                type: object
                $ref: '#/definitions/org'
  # '/ims/oneroster/rostering/v1p2/schools/{id}/classes':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getClassesForSchool
  #     description: Return the collection of classes taught by this school.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools]'
  #         x-source: getSchools
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of classes taught by this school.
  #         schema:
  #           properties:
  #             classes:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/class'
  # '/ims/oneroster/rostering/v1p2/schools/{school_id}/classes/{class_id}/enrollments':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getEnrollmentsForClassInSchools
  #     description: Return the collection of all enrollments into this class.
  #     parameters:
  #       - name: school_id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools]'
  #         x-source: getSchools
  #       - name: class_id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools/{id}/classes]'
  #         x-source: getClassesForSchool
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of all enrollments into this class.
  #         schema:
  #           properties:
  #             enrollments:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/enrollment'
  # '/ims/oneroster/rostering/v1p2/schools/{school_id}/classes/{class_id}/students':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getStudentsForClassInSchool
  #     description: Return the collection of students taking this class in this school.
  #     parameters:
  #       - name: school_id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools]'
  #         x-source: getSchools
  #       - name: class_id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools/{id}/classes]'
  #         x-source: getClassesForSchool
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of students taking this class in this school.
  #         schema:
  #           properties:
  #             users:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/user'
  # '/ims/oneroster/rostering/v1p2/schools/{school_id}/classes/{class_id}/teachers':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getTeachersForClassInSchool
  #     description: Return the collection of teachers taking this class in this school.
  #     parameters:
  #       - name: school_id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools]'
  #         x-source: getSchools
  #       - name: class_id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools/{id}/classes]'
  #         x-source: getClassesForSchool
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of teachers taking this class in this school.
  #         schema:
  #           properties:
  #             users:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/user'
  # '/ims/oneroster/rostering/v1p2/schools/{id}/courses':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getCoursesForSchool
  #     description: 'Return the collection of courses taught by this school. '
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools]'
  #         x-source: getSchools
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: 'Return the collection of courses taught by this school. '
  #         schema:
  #           properties:
  #             courses:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/course'
  # '/ims/oneroster/rostering/v1p2/schools/{id}/enrollments':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getEnrollmentsForSchools
  #     description: Return the collection of all enrollments for this school.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools]'
  #         x-source: getSchools
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of all enrollments for this school.
  #         schema:
  #           properties:
  #             enrollments:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/enrollment'
  # '/ims/oneroster/rostering/v1p2/schools/{id}/students':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getStudentsForSchool
  #     description: Return the collection of students attending this school.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools]'
  #         x-source: getSchools
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of students attending this school.
  #         schema:
  #           properties:
  #             users:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/user'
  # '/ims/oneroster/rostering/v1p2/schools/{id}/teachers':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getTeachersForSchool
  #     description: Return the collection of teachers teaching at this school.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools]'
  #         x-source: getSchools
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of teachers teaching at this school.
  #         schema:
  #           properties:
  #             users:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/user'
  # '/ims/oneroster/rostering/v1p2/schools/{id}/terms':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getTermsForSchool
  #     description: Return the collection of terms that are used by this school.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/schools]'
  #         x-source: getSchools
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of terms that are used by this school.
  #         schema:
  #           properties:
  #             academicSessions:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/academicSession'
  /ims/oneroster/rostering/v1p2/students:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Convenience Rostering
        - Rostering
      summary: getStudents
      description: Return collection of students.  A Student is an instance of a User.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: Return collection of students.  A Student is an instance of a User.
          schema:
            properties:
              users:
                type: array
                items:
                  $ref: '#/definitions/user'
  '/ims/oneroster/rostering/v1p2/students/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Convenience Rostering
        - Rostering
      summary: getStudent
      description: Return specific student.  A Student is an instance of a User.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/students]'
          x-source: getStudents
      responses:
        '200':
          description: Return specific student.  A Student is an instance of a User.
          schema:
            properties:
              user:
                type: object
                $ref: '#/definitions/user'
  # '/ims/oneroster/rostering/v1p2/students/{id}/classes':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getClassesForStudent
  #     description: Return the collection of classes that this student is taking.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/students]'
  #         x-source: getStudents
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of classes that this student is taking.
  #         schema:
  #           properties:
  #             classes:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/class'
  /ims/oneroster/rostering/v1p2/teachers:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Convenience Rostering
        - Rostering
      summary: getTeachers
      description: Return collection of teachers.  A Teacher is an instance of a User.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: Return collection of teachers.  A Teacher is an instance of a User.
          schema:
            properties:
              users:
                type: array
                items:
                  $ref: '#/definitions/user'
  '/ims/oneroster/rostering/v1p2/teachers/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Convenience Rostering
        - Rostering
      summary: getTeacher
      description: Return specific teacher.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/teachers]'
          x-source: getTeachers
      responses:
        '200':
          description: Return specific teacher.
          schema:
            properties:
              user:
                type: object
                $ref: '#/definitions/user'
  # '/ims/oneroster/rostering/v1p2/teachers/{id}/classes':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getClassesForTeacher
  #     description: Return the collection of classes that this teacher is teaching.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/teachers]'
  #         x-source: getTeachers
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of classes that this teacher is teaching.
  #         schema:
  #           properties:
  #             classes:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/class'
  /ims/oneroster/rostering/v1p2/terms:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Convenience Rostering
        - Rostering
      summary: getTerms
      description: Return collection of terms.  A Term is an instance of an AcademicSession.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: Return collection of terms.  A Term is an instance of an AcademicSession.
          schema:
            properties:
              academicSessions:
                type: array
                items:
                  $ref: '#/definitions/academicSession'
  '/ims/oneroster/rostering/v1p2/terms/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Convenience Rostering
        - Rostering
      summary: getTerm
      description: Return specific term.
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/terms]'
          x-source: getTerms
      responses:
        '200':
          description: Return specific term.
          schema:
            properties:
              academicSession:
                type: object
                $ref: '#/definitions/academicSession'
  # '/ims/oneroster/rostering/v1p2/terms/{id}/classes':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getClassesForTerm
  #     description: Return the collection of classes that are taught in this term.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/terms]'
  #         x-source: getTerms
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of classes that are taught in this term.
  #         schema:
  #           properties:
  #             classes:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/class'
  # '/ims/oneroster/rostering/v1p2/terms/{id}/gradingPeriods':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getGradingPeriodsForTerm
  #     description: Return the collection of Grading Periods that are part of this term.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/terms]'
  #         x-source: getTerms
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of Grading Periods that are part of this term.
  #         schema:
  #           properties:
  #             academicSessions:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/academicSession'
  /ims/oneroster/rostering/v1p2/users:
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getUsers
      description: 'Return collection of users'
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: fields
          in: query
          required: false
          type: string
        - name: filter
          in: query
          required: false
          type: string
        - name: limit
          in: query
          required: false
          type: integer
          default: 100
        - name: offset
          in: query
          required: false
          type: integer
          default: 0
        - name: sort
          in: query
          required: false
          type: string
        - name: orderBy
          in: query
          required: false
          type: string
          default: asc
          enum:
            - asc
            - desc
      responses:
        '200':
          description: 'Return collection of users '
          schema:
            properties:
              users:
                type: array
                items:
                  $ref: '#/definitions/user'
  # '/ims/oneroster/resources/v1p2/users/{id}/resources':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Resources
  #       - Resources
  #     summary: getResourcesForUser
  #     description: Return the collection of resources associated to this user.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/users]'
  #         x-source: getUsers
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of resources associated to this user.
  #         schema:
  #           properties:
  #             resources:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/resource'
  '/ims/oneroster/rostering/v1p2/users/{id}':
    get:
      consumes:
        - application/json
      produces:
        - application/json
      tags:
        - Basic Rostering
        - Rostering
      summary: getUser
      description: Return specific user
      security:
        - oauth2_auth:
            - "oneroster:read"
      parameters:
        - name: id
          in: path
          required: true
          type: string
          description: 'An identifier from [ims/oneroster/rostering/v1p2/users]'
          x-source: getUsers
      responses:
        '200':
          description: Return specific user
          schema:
            properties:
              user:
                type: object
                $ref: '#/definitions/user'
  # '/ims/oneroster/rostering/v1p2/users/{id}/classes':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getClassesForUser
  #     description: Return the collection of classes attended by this user.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/users]'
  #         x-source: getUsers
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of classes attended by this user.
  #         schema:
  #           properties:
  #             classes:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/class'
  # '/ims/oneroster/rostering/v1p2/users/{id}/roles':
  #   get:
  #     consumes:
  #       - application/json
  #     produces:
  #       - application/json
  #     tags:
  #       - Convenience Rostering
  #       - Rostering
  #     summary: getRolesForUser
  #     description: Return the collection of roles associated with this user.
  #     parameters:
  #       - name: id
  #         in: path
  #         required: true
  #         type: string
  #         description: 'An identifier from [ims/oneroster/rostering/v1p2/users]'
  #         x-source: getUsers
  #       - name: fields
  #         in: query
  #         required: false
  #         type: string
  #       - name: filter
  #         in: query
  #         required: false
  #         type: string
  #       - name: limit
  #         in: query
  #         required: false
  #         type: integer
  #         default: 100
  #       - name: offset
  #         in: query
  #         required: false
  #         type: integer
  #         default: 0
  #       - name: sort
  #         in: query
  #         required: false
  #         type: string
  #       - name: orderBy
  #         in: query
  #         required: false
  #         type: string
  #         default: asc
  #         enum:
  #           - asc
  #           - desc
  #     responses:
  #       '200':
  #         description: Return the collection of roles associated with this user.
  #         schema:
  #           properties:
  #             roles:
  #               type: array
  #               items:
  #                 $ref: '#/definitions/roles'
definitions:
  baseClass:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: 'â€œboardingâ€: â€œfalseâ€'
        type: object
  org:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: 'E.g. â€œclassificationâ€ : â€œpublicâ€'
        type: object
      name:
        description: IMS High
        type: string
      type:
        description: See Subsection 4.13.4 for enumeration list.
        type: string
        enum:
          - department
          - school
          - district
          - local
          - state
          - national
      identifier:
        description: Human readable identifier for this org (e.g. NCES ID).
        type: string
      parent:
        description: The link (sourcedId) to the parent Org.
        type: object
      children:
        description: The links (sourcedIds) to the set of child Orgs.
        type: object
  academicSession:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: 'â€œcommentâ€ : â€œgrading period 1â€'
        type: object
      title:
        description: Spring Term
        type: string
      startDate:
        description: '40909'
        type: string
        format: date
      endDate:
        description: '41029'
        type: string
        format: date
      type:
        description: See subsection 4.13.7 for the enumeration list.
        type: string
        enum:
          - gradingPeriod
          - semester
          - schoolYear
          - term
      parent:
        description: (link to parent (if applicable))
        type: object
      children:
        description: (link to children (if applicable))
        type: object
      schoolYear:
        description: The school year for the academic session.  This year should include the school year end.  E.g. 2014 or 2014-2015
        type: string
  enrollment:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: ''
        type: object
      user:
        description: Link to the enrolled User.
        type: object
      class:
        description: Link to the class on which the user is enrolled.
        type: object
      school:
        description: Link to the school at which the class is being provided.
        type: object
      role:
        description: See subsection 4.13.6 for the enumeration list.
        type: string
        enum:
          - administrator
          - aide
          - guardian
          - invigilator
          - parent
          - proctor
          - relative
          - student
          - teacher
      primary:
        description: Applicable only to teachers. Only one teacher should be designated as the primary teacher for a class.
        type: boolean
      beginDate:
        description: 'The start date for the enrollment (inclusive). This date must be within the period of the associated Academic Session. Example: 2012-04-23'
        type: string
        format: date
      endDate:
        description: 'The end date for the enrollment (exclusive).  This date must be within the period of the associated Academic Session.  Example: 2013-03-31'
        type: string
        format: date
  course:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: ''
        type: object
      title:
        description: Basic Chemistry
        type: string
      schoolYear:
        description: 'Link to academicSession, if applicable.'
        type: object
      courseCode:
        description: CHEM101
        type: string
      grade:
        description: 'Grade(s) for which the class is attended.  The value will be either a single entry or a comma separated list enclosed in double quotes (as per RFC 4180).  The permitted vocabulary is from CEDS (5th generation): https://ceds.ed.gov/.  Example: 09 or â€œ09,10,11â€'
        type: string
        enum:
          - IT
          - PR
          - PK
          - TK
          - KG
          - '01'
          - '02'
          - '03'
          - '04'
          - '05'
          - '06'
          - '07'
          - '08'
          - '09'
          - '10'
          - '11'
          - '12'
          - '13'
          - PS
          - ABE
          - ASE
          - AdultESL
          - UG
          - Other
      subjects:
        description: 'This is a human readable string.  Example: â€œchemistryâ€.'
        type: string
      org:
        description: 'Link to org, if applicable.'
        type: object
      subjectCodes:
        description: "This is a machine readable set of codes and the number should match the associated â€˜subjectsâ€™ attribute. The vocabulary is from SCED (School Codes for the Exchange of Data):\_http://nces.ed.gov/forum/SCED.asp.\_"
        type: string
        enum:
          - '01'
          - '02'
          - '03'
          - '04'
          - '05'
          - '06'
          - '07'
          - '08'
          - '09'
          - '10'
          - '11'
          - '12'
          - '13'
          - '14'
          - '15'
          - '16'
          - '17'
          - '18'
          - '19'
          - '20'
          - '21'
          - '22'
          - '23'
      resources:
        description: Link to resources if applicable.
        type: object
  class:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: 'â€œcommentâ€: â€œ9am to 11amâ€'
        type: object
      title:
        description: Basic Chemistry
        type: string
      classCode:
        description: Chem101-Mr Rogers
        type: string
      classType:
        description: See subsection 4.13.1 for the enumeration list.
        type: string
        enum:
          - homeroom
          - scheduled
      location:
        description: â€œroom 19â€
        type: string
      grade:
        description: 'Grade(s) for which the class is attended.  The value will be either a single entry or a comma separated list enclosed in double quotes (as per RFC 4180).  The permitted vocabulary is from CEDS (5th generation): https://ceds.ed.gov/.  Example: 09 or â€œ09,10,11â€'
        type: string
        enum:
          - IT
          - PR
          - PK
          - TK
          - KG
          - '01'
          - '02'
          - '03'
          - '04'
          - '05'
          - '06'
          - '07'
          - '08'
          - '09'
          - '10'
          - '11'
          - '12'
          - '13'
          - PS
          - ABE
          - ASE
          - AdultESL
          - UG
          - Other
      subjects:
        description: 'Subject name(s). If more than one subject is needed, use double quotes, and separate with commas (per RFC 4180).  Example: â€œchemistryâ€'
        type: string
      course:
        description: Link to course i.e. the Course â€˜sourcedIdâ€™.
        type: object
      school:
        description: Link to school i.e. the School â€˜sourcedIdâ€™.
        type: object
      terms:
        description: Links to terms (academicSession) i.e. the set of Term â€˜sourcedIds.
        type: object
      subjectCodes:
        description: "This is a machine readable set of codes and the number should match the associated â€˜subjectsâ€™ attribute. The vocabulary is from SCED (School Codes for the Exchange of Data):\_http://nces.ed.gov/forum/SCED.asp.\_"
        type: string
        enum:
          - '01'
          - '02'
          - '03'
          - '04'
          - '05'
          - '06'
          - '07'
          - '08'
          - '09'
          - '10'
          - '11'
          - '12'
          - '13'
          - '14'
          - '15'
          - '16'
          - '17'
          - '18'
          - '19'
          - '20'
          - '21'
          - '22'
          - '23'
      periods:
        description: 'The time slots in the day that the class will be given.  If more than one period is needed, use double quotes, and separate with commas (per RFC 4180). Examples: 1; â€œ1,3,5â€'
        type: string
      resources:
        description: (Link to resources if applicable)
        type: object
  resource:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: 'â€œcommentâ€: â€œ9am to 11amâ€'
        type: object
      title:
        description: Organic Chemistry
        type: string
      roles:
        description: See subsection 4.13.6 for the enumeration list.
        type: string
        enum:
          - administrator
          - aide
          - guardian
          - invigilator
          - parent
          - proctor
          - relative
          - student
          - teacher
      importance:
        description: See subsection 4.13.3 for the enumeration list.
        type: string
        enum:
          - primary
          - secondary
      vendorResourceId:
        description: Unique identifier for the resource allocated by the vendor.
        type: string
      vendorId:
        description: Identifier for the vendor who created the resource.  This will be assigned by IMS as part of Basic Certification.
        type: string
      applicationId:
        description: Identifier for the application associated with the resource.
        type: string
  user:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: ''
        type: object
      username:
        description: pjn@imsglobal.org
        type: string
      userIds:
        description: 'This is an external user id that should be used for this user, if for some reason the sourcedId cannot be used. This might be an active directory id, an LTI id, or some other machine readable identifier that is used for this person.'
        "schema": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "default": []
        }
      identifier:
        description: 9877728989-ABF-0001
        type: string
      givenName:
        description: Phil
        type: string
      familyName:
        description: Nicholls
        type: string
      middleName:
        description: If more than one middle name is needed separate using a space â€œWingarde Granvilleâ€
        type: string
      email:
        description: pjn@imsglobal.org
        type: string
      sms:
        description: +44 07759 555 922
        type: string
      phone:
        description: +44 07759 555 922
        type: string
      agents:
        description: Links to other people.
        type: object
      preferredGivenName:
        description: Phil
        type: string
      preferredFamilyName:
        description: Nicholls
        type: string
      preferredMiddleName:
        description: If more than one middle name is needed separate using a space â€œWingarde Granvilleâ€
        type: string
      pronouns:
        description: he/him/his
        type: string
      roles:
        description: Role(s) for which the user is enrolled.
        type: object
      demographics:
        description: Link to demographics.
        type: object
      grade:
        description: 'Grade(s) for which the class is attended.  The value will be either a single entry or a comma separated list enclosed in double quotes (as per RFC 4180).  The permitted vocabulary is from CEDS (5th generation): https://ceds.ed.gov/.'
        type: string
        enum:
          - IT
          - PR
          - PK
          - TK
          - KG
          - '01'
          - '02'
          - '03'
          - '04'
          - '05'
          - '06'
          - '07'
          - '08'
          - '09'
          - '10'
          - '11'
          - '12'
          - '13'
          - PS
          - ABE
          - ASE
          - AdultESL
          - UG
          - Other
      password:
        description: Xwyz//123
        type: string
  demographic:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      birthDate:
        description: Date
        type: string
        format: date
      sex:
        description: See subsection 4.13.2 for the enumeration list.
        type: string
        enum:
          - Male
          - Female
      americanIndianOrAlaskaNative:
        description: Boolean (â€œtrueâ€ | â€œfalseâ€)
        type: boolean
      asian:
        description: Boolean (â€œtrueâ€ | â€œfalseâ€)
        type: boolean
      blackOrAfricanAmerican:
        description: Boolean (â€œtrueâ€ | â€œfalseâ€)
        type: boolean
      nativeHawaiianOrOtherPacificIslander:
        description: Boolean (â€œtrueâ€ | â€œfalseâ€)
        type: boolean
      white:
        description: Boolean (â€œtrueâ€ | â€œfalseâ€)
        type: boolean
      demographicRaceTwoOrMoreRaces:
        description: Boolean (â€œtrueâ€ | â€œfalseâ€)
        type: boolean
      hispanicOrLatinoEthnicity:
        description: Boolean (â€œtrueâ€ | â€œfalseâ€)
        type: boolean
      countryOfBirthCode:
        description: 'Vocabulary â€“ https://ceds.ed.gov/CEDSElementDetails.aspx?TermxTopicId=20002'
        type: string
        enum:
          - AF
          - AX
          - AL
          - DZ
          - AS
          - AD
          - AO
          - AI
          - AQ
          - AG
          - AR
          - AM
          - AW
          - AU
          - AT
          - AZ
          - BS
          - BH
          - BD
          - BB
          - BY
          - BE
          - BZ
          - BJ
          - BM
          - BT
          - BO
          - BQ
          - BA
          - BW
          - BV
          - BR
          - IO
          - BN
          - BG
          - BF
          - BI
          - KH
          - CM
          - CA
          - CV
          - KY
          - CF
          - TD
          - CL
          - CN
          - CX
          - CC
          - CO
          - KM
          - CG
          - CD
          - CK
          - CR
          - CI
          - HR
          - CU
          - CW
          - CY
          - CZ
          - DK
          - DJ
          - DM
          - DO
          - EC
          - EG
          - SV
          - GQ
          - ER
          - EE
          - ET
          - FK
          - FO
          - FJ
          - FI
          - FR
          - GF
          - PF
          - TF
          - GA
          - GM
          - GE
          - DE
          - GH
          - GI
          - GR
          - GL
          - GD
          - GP
          - GU
          - GT
          - GG
          - GN
          - GW
          - GY
          - HT
          - HM
          - VA
          - HN
          - HK
          - HU
          - IS
          - IN
          - ID
          - IR
          - IQ
          - IE
          - IM
          - IL
          - IT
          - JM
          - JP
          - JE
          - JO
          - KZ
          - KE
          - KI
          - KP
          - KR
          - KW
          - KG
          - LA
          - LV
          - LB
          - LS
          - LR
          - LY
          - LI
          - LT
          - LU
          - MO
          - MK
          - MG
          - MW
          - MY
          - MV
          - ML
          - MT
          - MH
          - MQ
          - MR
          - MU
          - YT
          - MX
          - FM
          - MD
          - MC
          - MN
          - ME
          - MS
          - MA
          - MZ
          - MM
          - NA
          - NR
          - NP
          - NL
          - NC
          - NZ
          - NI
          - NE
          - NG
          - NU
          - NF
          - MP
          - 'NO'
          - OM
          - PK
          - PW
          - PS
          - PA
          - PG
          - PY
          - PE
          - PH
          - PN
          - PL
          - PT
          - PR
          - QA
          - RE
          - RO
          - RU
          - RW
          - BL
          - SH
          - KN
          - LC
          - MF
          - PM
          - VC
          - WS
          - SM
          - ST
          - SA
          - SN
          - RS
          - SC
          - SL
          - SG
          - SX
          - SK
          - SI
          - SB
          - SO
          - ZA
          - GS
          - SS
          - ES
          - LK
          - SD
          - SR
          - SJ
          - SZ
          - SE
          - CH
          - SY
          - TW
          - TJ
          - TZ
          - TH
          - TL
          - TG
          - TK
          - TO
          - TT
          - TN
          - TR
          - TM
          - TC
          - TV
          - UG
          - UA
          - AE
          - GB
          - US
          - UM
          - UY
          - UZ
          - VU
          - VE
          - VN
          - VG
          - VI
          - WF
          - EH
          - YE
          - ZM
          - ZW
      stateOfBirthAbbreviation:
        description: 'Vocabulary â€“ https://ceds.ed.gov/CEDSElementDetails.aspx?TermxTopicId=20837'
        type: string
        enum:
          - AK
          - AL
          - AR
          - AS
          - AZ
          - CA
          - CO
          - CT
          - DC
          - DE
          - FL
          - FM
          - GA
          - GU
          - HI
          - IA
          - ID
          - IL
          - IN
          - KS
          - KY
          - LA
          - MA
          - MD
          - ME
          - MH
          - MI
          - MN
          - MO
          - MP
          - MS
          - MT
          - NC
          - ND
          - NE
          - NH
          - NJ
          - NM
          - NV
          - NY
          - OH
          - OK
          - OR
          - PA
          - PR
          - PW
          - RI
          - SC
          - SD
          - TN
          - TX
          - UT
          - VA
          - VI
          - VT
          - WA
          - WI
          - WV
          - WY
      cityOfBirth:
        description: String
        type: string
      publicSchoolResidenceStatus:
        description: 'Vocabulary - https://ceds.ed.gov/CEDSElementDetails.aspx?TermxTopicId=20863'
        type: string
        enum:
          - '01652'
          - '01653'
          - '01654'
          - '01655'
          - '01656'
  category:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: ''
        type: object
      title:
        description: Homework
        type: string
  lineItem:
    properties:
      sourcedId:
        description: 'This is sourcedId of the associated User. Example: 9877728989-ABF-0001'
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: ''
        type: object
      title:
        description: Maths Test 1
        type: string
      description:
        description: Simple addition test
        type: string
      assignDate:
        description: '2012-01-01T18:25:43.511Z'
        type: string
        format: date
      dueDate:
        description: '2012-01-05T18:25:43.511Z'
        type: string
        format: date
      class:
        description: <link to class>
        type: object
      category:
        description: <link to category>
        type: object
      gradingPeriod:
        description: <link to grading period>
        type: object
      resultValue:
        description: 'â€œminâ€ : â€œ0.0â€, â€œmaxâ€ : â€œ100.0â€'
        type: string
  result:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: ''
        type: object
      lineItem:
        description: <link to line item>
        type: object
      student:
        description: <link to student>
        type: object
      resultStatus:
        description: See subsection 4.13.5 for the enumeration list.
        type: string
        enum:
          - exempt
          - fully graded
          - not submitted
          - partially graded
          - submitted
      score:
        description: '67'
        type: number
        format: float
      date:
        description: '2012-01-05T18:25:43.511Z'
        type: string
        format: date
      comment:
        description: â€œexcellentâ€
        type: string
  role:
    properties:
      sourcedId:
        description: 9877728989-ABF-0001
        type: string
      status:
        description: active
        type: string
        enum:
          - active
          - tobedeleted
      dateLastModified:
        description: '2012-04-23T18:25:43.511Z'
        type: string
        format: date-time
      metadata:
        description: ''
        type: object
      user:
        description: Link to the User.
        type: object
      roleType:
        description: 'Only one role should be designated as the primary role for an org.'
        type: string
        enum:
          - primary
          - secondary
      role:
        description: See subsection 4.13.6 for the enumeration list.
        type: string
        enum:
          - administrator
          - aide
          - guardian
          - invigilator
          - parent
          - proctor
          - relative
          - student
          - teacher
      beginDate:
        description: 'The start date for the role (inclusive). This date must be within the period of the associated Academic Session. Example: 2012-04-23'
        type: string
        format: date
      endDate:
        description: 'The end date for the role (exclusive).  This date must be within the period of the associated Academic Session.  Example: 2013-03-31'
        type: string
        format: date
      org:
        description: 'Link to org, if applicable.'
        type: object
      userProfileSourcedId:
        description: 9877728989-ABF-0001
        type: string